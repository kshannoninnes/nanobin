@page "/"
@inject PasteService PasteService
@inject NavigationManager Navigation
@inject ILogger<Index> Logger
@inject IJSRuntime JsRuntime
@implements IAsyncDisposable

<div class="create-paste">
    <div class="editor-container">
        <textarea @ref="PasteArea" class="paste-input" placeholder="Enter your text here..." @bind="_pasteContent"></textarea>
    </div>
    <button @onclick="SubmitAsync" class="create-button">Create Paste</button>
</div>

@code {
    private string _pasteContent = string.Empty;
    private IJSObjectReference? _javascript;
    private ElementReference PasteArea { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        // Fix for autofocus not working in blazor apps
        await PasteArea.FocusAsync();
        
        try
        {
            _javascript = await JsRuntime.InvokeAsync<IJSObjectReference>(
                "import", "./Components/Pages/Index.razor.js");
        }
        catch (JSException e)
        {
            Logger.LogWarning(e, "Error initializing JavaScript module");
        }
    }

    private async Task SubmitAsync()
    {
        if (string.IsNullOrWhiteSpace(_pasteContent))
        {
            Logger.LogWarning("Attempt to submit empty paste content");
            return;
        }

        try
        {
            if (_javascript is null)
            {
                return;
            }
            
            var encryptedContent = await _javascript.InvokeAsync<string>("encryptContent", _pasteContent);
            var pasteId = await PasteService.CreatePasteAsync(encryptedContent);
            Logger.LogInformation("Created new paste with ID {PasteId}", pasteId);
            
            await _javascript.InvokeVoidAsync("navigateToNewPaste", pasteId);
        }
        catch (IOException e)
        {
            Logger.LogError(e, "Database error occurred while creating paste");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        try
        {
            if (_javascript is not null)
            {
                await _javascript.DisposeAsync();
            }
        }
        catch (JSDisconnectedException)
        {
            // Sources suggest to suppress this exception because it happens in normal operation?
            // https://github.com/dotnet/aspnetcore/issues/49376
        }
    }
}